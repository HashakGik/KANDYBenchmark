-
  name: structured vs random
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - any_displacement:
    - random_repeat_before:
        min: 3
        max: 5
        list:
          - &any_obj {shape: ~, color: ~, size: ~}
  negative_set:
  - random:
    - random_repeat_before:
        min: 3
        max: 5
        list:
          - *any_obj
-
  name: shared attribute vs random
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - any_displacement:
    - random_repeat_before:
        min: 3
        max: 5
        list:
          - pick_before: &fixed_random_attr
              n: 1
              list:
                - &any_tri {shape: triangle, color: ~, size: ~}
                - &any_squ {shape: square, color: ~, size: ~}
                - &any_cir {shape: circle, color: ~, size: ~}
                - &any_sml {shape: ~, color: ~, size: small}
                - &any_lrg {shape: ~, color: ~, size: large}
                - &any_red {shape: ~, color: red, size: ~}
                - &any_grn {shape: ~, color: green, size: ~}
                - &any_blu {shape: ~, color: blue, size: ~}
                - &any_cyn {shape: ~, color: cyan, size: ~}
                - &any_mag {shape: ~, color: magenta, size: ~}
                - &any_ylw {shape: ~, color: yellow, size: ~}
              
  
  negative_set:
  - any_displacement:
    - random_repeat_before:
        min: 3
        max: 5
        list:
          - *any_obj
            
            
-
  name: flat palindromes
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - any_line:
    - palindrome:
      - repeat_before:
          n: 3
          list:
            - *any_obj
  negative_set:
  - any_line:
    - permute:
      - palindrome:          # A permuted palindrome guarantees that there will be the same objects as the positive set (which is different than a permutation of 5 random objects)
        - repeat_before:
            n: 3
            list:
              - *any_obj
-
  name: balanced structures
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - *any_obj
          - stack:
            - repeat_before:
                n: 5
                list:
                  - *any_obj
  - stack:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - *any_obj
          - side_by_side:
            - repeat_before:
                n: 5
                list:
                  - *any_obj
  negative_set:
  - side_by_side:
    - permute:
        - repeat_before:
            n: 4
            list:
              - *any_obj
        - stack:
          - repeat_before:
              n: 5
              list:
                - *any_obj
  - stack:
    - permute:
        - repeat_before:
            n: 4
            list:
              - *any_obj
        - side_by_side:
          - repeat_before:
              n: 5
              list:
                - *any_obj
-
  name: shared intersection
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - store_before:
                    alias: attr_1
                    list:
                      - pick_before:
                          n: 1
                          list:
                            - *any_tri
                            - *any_squ
                            - *any_cir
          - stack:
            - argsort:
                idx: [0, 1, 4, 2, 3]
                list:
                  - repeat_before:
                      n: 4
                      list:
                        - store_before:
                            alias: attr_2
                            list:
                              - pick_before:
                                  n: 1
                                  list:
                                    - *any_red
                                    - *any_grn
                                    - *any_blu
                                    - *any_cyn
                                    - *any_mag
                                    - *any_ylw
                  - intersection: # Important: rows and columns fix disjoint features, so that their intersection is never empty.
                      - recall:
                          alias: attr_1
                      - recall:
                          alias: attr_2
  - stack:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - store_before:
                    alias: attr_1
                    list:
                      - pick_before:
                          n: 1
                          list:
                            - *any_tri
                            - *any_squ
                            - *any_cir
          - side_by_side:
            - argsort:
                idx: [0, 1, 4, 2, 3]
                list:
                  - repeat_before:
                      n: 4
                      list:
                        - store_before:
                            alias: attr_2
                            list:
                              - pick_before:
                                  n: 1
                                  list:
                                    - *any_red
                                    - *any_grn
                                    - *any_blu
                                    - *any_cyn
                                    - *any_mag
                                    - *any_ylw
                  - intersection:
                      - recall:
                          alias: attr_1
                      - recall:
                          alias: attr_2     

  
  negative_set:
  - side_by_side:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - pick_before:
                    n: 1
                    list:
                      - *any_tri
                      - *any_squ
                      - *any_cir
          - stack:
            - repeat_before:
                n: 5
                list:
                  - pick_before:
                      n: 1
                      list:
                        - *any_red
                        - *any_grn
                        - *any_blu
                        - *any_cyn
                        - *any_mag
                        - *any_ylw
  - stack:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - repeat_before:
              n: 4
              list:
                - pick_before:
                    n: 1
                    list:
                      - *any_tri
                      - *any_squ
                      - *any_cir
          - side_by_side:
            - repeat_before:
                n: 5
                list:
                  - pick_before:
                      n: 1
                      list:
                        - *any_red
                        - *any_grn
                        - *any_blu
                        - *any_cyn
                        - *any_mag
                        - *any_ylw
  
-
  name: sorted features
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - any_displacement:
      - repeat_before:
          n: 2
          list:
            - *any_obj
    - any_displacement:
      - repeat_before:
          n: 3
          list:
            - *any_obj
    - any_displacement:
      - repeat_before:
          n: 4
          list:
            - *any_obj
    - any_displacement:
      - repeat_before:
          n: 5
          list:
            - *any_obj
  negative_set:
  - grid:
    - permute:
      - any_displacement:
        - repeat_before:
            n: 2
            list:
              - *any_obj
      - any_displacement:
        - repeat_before:
            n: 3
            list:
              - *any_obj
      - any_displacement:
        - repeat_before:
            n: 4
            list:
              - *any_obj
      - any_displacement:
        - repeat_before:
            n: 5
            list:
              - *any_obj
-
  name: clustered features
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
          - pick_before: &fixed_random_large
              n: 1
              list:
                - {shape: triangle, color: ~, size: large}
                - {shape: square, color: ~, size: large}
                - {shape: circle, color: ~, size: large}
                - {shape: ~, color: red, size: large}
                - {shape: ~, color: green, size: large}
                - {shape: ~, color: blue, size: large}
                - {shape: ~, color: cyan, size: large}
                - {shape: ~, color: magenta, size: large}
                - {shape: ~, color: yellow, size: large}
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
          - pick_before: *fixed_random_large
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
          - pick_before: *fixed_random_large
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
          - pick_before: *fixed_random_large
  
  negative_set:
  - grid:
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
            - *any_lrg
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
            - *any_lrg
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
            - *any_lrg
    - any_displacement:
      - random_repeat_before:
          min: 2
          max: 3
          list:
            - *any_lrg
  - grid: # hard negatives: 3 out of 4 are ok
    - permute_before:
      - any_displacement:
        - random_repeat_before:
            min: 2
            max: 3
            list:
              - *any_lrg
      - any_displacement:
        - random_repeat_before:
            min: 2
            max: 3
            list:
            - pick_before: *fixed_random_large
      - any_displacement:
        - random_repeat_before:
            min: 2
            max: 3
            list:
            - pick_before: *fixed_random_large
      - any_displacement:
        - random_repeat_before:
            min: 2
            max: 3
            list:
            - pick_before: *fixed_random_large
  
-
  name: diag implication # Either a grid of four arbitrary non-diagonal sets, or a grid of one diagonal with objects with the same features and three arbitrary non-diagonals
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - pick:
        n: 1
        list:
          - any_non_diag:
            - repeat_before:
                n: 4
                list:
                  - *any_obj
          - any_non_diag:
            - repeat:          # Confounder: there is a good probability that non-diagonals can contain all the same shape
                n: 4
                list:
                  - *any_obj
    - pick:
        n: 1
        list:
          - any_non_diag:
            - repeat_before:
                n: 4
                list:
                  - *any_obj
          - any_non_diag:
            - repeat:
                n: 4
                list:
                  - *any_obj
    - pick:
        n: 1
        list:
          - any_non_diag:
            - repeat_before:
                n: 4
                list:
                  - *any_obj
          - any_non_diag:
            - repeat:
                n: 4
                list:
                  - *any_obj
    - pick:
        n: 1
        list:
          - any_non_diag:
            - repeat_before:
                n: 4
                list:
                  - *any_obj
          - any_non_diag:
            - repeat:
                n: 4
                list:
                  - *any_obj
  - grid:
    - permute:
      - any_diag:
        - repeat:
            n: 4
            list:
              - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                  n: 4
                  list:
                    - *any_obj
            - any_non_diag:
              - repeat:
                  n: 4
                  list:
                    - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                  n: 4
                  list:
                    - *any_obj
            - any_non_diag:
              - repeat:
                  n: 4
                  list:
                    - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                  n: 4
                  list:
                    - *any_obj
            - any_non_diag:
              - repeat:
                  n: 4
                  list:
                    - *any_obj
           
  negative_set:
  - grid:
    - permute:
      - any_diag:
        - repeat_before:
           n: 4
           list:
             - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                 n: 4
                 list:
                   - *any_obj
            - any_non_diag:
              - repeat:
                  n: 4
                  list:
                    - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                 n: 4
                 list:
                   - *any_obj
            - any_non_diag:
              - repeat:
                 n: 4
                 list:
                   - *any_obj
      - pick:
          n: 1
          list:
            - any_non_diag:
              - repeat_before:
                 n: 4
                 list:
                   - *any_obj
            - any_non_diag:
              - repeat:
                 n: 4
                 list:
                   - *any_obj
                   
-
  name: double palindrome
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - stack:
    - palindrome:
      - permute:
        - *any_obj
        - *any_obj
        - side_by_side:
          - palindrome:
            - *any_obj
            - *any_obj
            - *any_obj
  - side_by_side:
    - palindrome:
      - permute:
        - *any_obj
        - *any_obj
        - stack:
          - palindrome:
            - *any_obj
            - *any_obj
            - *any_obj
      
  negative_set:
  - stack:
    - permute:
      - palindrome:
        - permute:
          - *any_obj
          - *any_obj
          - side_by_side:
            - permute:
              - palindrome:
                - *any_obj
                - *any_obj
                - *any_obj
  - side_by_side:
    - permute:
      - palindrome:
        - permute:
          - *any_obj
          - *any_obj
          - stack:
            - permute:
              - palindrome:
                - *any_obj
                - *any_obj
                - *any_obj
  - stack:
    - permute:
      - palindrome:
        - permute:
          - *any_obj
          - *any_obj
          - side_by_side:
            - palindrome:
              - *any_obj
              - *any_obj
              - *any_obj
  - side_by_side:
    - permute:
      - palindrome:
        - permute:
          - *any_obj
          - *any_obj
          - stack:
            - palindrome:
              - *any_obj
              - *any_obj
              - *any_obj
  - stack:
    - palindrome:
      - permute:
        - *any_obj
        - *any_obj
        - side_by_side:
          - permute:
            - palindrome:
              - *any_obj
              - *any_obj
              - *any_obj
  - side_by_side:
    - palindrome:
      - permute:
        - *any_obj
        - *any_obj
        - stack:
          - permute:
            - palindrome:
              - *any_obj
              - *any_obj
              - *any_obj
-
  name: double pseudo palindrome       # TODO GROUND DI UN ATTRIBUTO DENTRO I PALINDROMI
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - stack:
    - palindrome_before:
      - pick_before: *fixed_random_large
      - pick_before: *fixed_random_large
      - side_by_side:
        - palindrome_before:
          - pick_before: *fixed_random_large
          - pick_before: *fixed_random_large
          - pick_before: *fixed_random_large
  - side_by_side:
    - palindrome_before:
      - pick_before: *fixed_random_large
      - pick_before: *fixed_random_large
      - stack:
        - palindrome_before:
          - pick_before: *fixed_random_large
          - pick_before: *fixed_random_large
          - pick_before: *fixed_random_large
      
  negative_set:
  - stack:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - permute_before:
            - repeat_before:
                n: 2
                list:
                  - pick_before: *fixed_random_large
                  - pick_before: *fixed_random_large
          - side_by_side:
            - permute_before:
              - pick_before: *fixed_random_large
              - repeat_before:
                  n: 2
                  list:
                    - pick_before: *fixed_random_large
                    - pick_before: *fixed_random_large
  - side_by_side:
    - argsort:
        idx: [0, 1, 4, 2, 3]
        list:
          - permute_before:
            - repeat_before:
                n: 2
                list:
                  - pick_before: *fixed_random_large
                  - pick_before: *fixed_random_large
          - stack:
            - permute_before:
              - pick_before: *fixed_random_large
              - repeat_before:
                  n: 2
                  list:
                    - pick_before: *fixed_random_large
                    - pick_before: *fixed_random_large
-
  name: triple palindrome
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - any_diag:
    - palindrome:
      - stack:
        - palindrome:
          - {shape: ~, color: ~, size: small}
          - {shape: ~, color: ~, size: small}
          - side_by_side:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
      - stack:
        - palindrome:
          - {shape: ~, color: ~, size: small}
          - {shape: ~, color: ~, size: small}
          - side_by_side:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
  
  negative_set: # At least one of the three levels is not a palindrome
  - any_diag:
    - permute:
      - palindrome:
        - stack:
          - palindrome:
            - {shape: ~, color: ~, size: small}
            - {shape: ~, color: ~, size: small}
            - side_by_side:
              - palindrome:
                - {shape: ~, color: ~, size: small}
                - {shape: ~, color: ~, size: small}
                - {shape: ~, color: ~, size: small}
        - stack:
          - palindrome:
            - {shape: ~, color: ~, size: small}
            - {shape: ~, color: ~, size: small}
            - side_by_side:
              - palindrome:
                - {shape: ~, color: ~, size: small}
                - {shape: ~, color: ~, size: small}
                - {shape: ~, color: ~, size: small}
  - any_diag:
    - permute:
      - palindrome:
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - palindrome:
                  - {shape: ~, color: ~, size: small}
                  - {shape: ~, color: ~, size: small}
                  - {shape: ~, color: ~, size: small}
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - palindrome:
                  - {shape: ~, color: ~, size: small}
                  - {shape: ~, color: ~, size: small}
                  - {shape: ~, color: ~, size: small}
  - any_diag:
    - permute:
      - palindrome:
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
  - any_diag:
    - permute:
      - palindrome:
        - stack:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
        - stack:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
  - any_diag:
      - palindrome:
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
        - stack:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                - permute:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
  - any_diag:
      - palindrome:
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
        - stack:
          - permute:
            - palindrome:
              - {shape: ~, color: ~, size: small}
              - {shape: ~, color: ~, size: small}
              - side_by_side:
                  - palindrome:
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
                    - {shape: ~, color: ~, size: small}
-
  name: smallest vertical line is uniform
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side_reduce_bb:
    - permute:
      - stack:
        - random_repeat_before:
            min: 2
            max: 3
            list:
            - pick_before: &fixed_random_small
                n: 1
                list:
                - {shape: triangle, color: ~, size: small}
                - {shape: square, color: ~, size: small}
                - {shape: circle, color: ~, size: small}
                - {shape: ~, color: red, size: small}
                - {shape: ~, color: green, size: small}
                - {shape: ~, color: blue, size: small}
                - {shape: ~, color: cyan, size: small}
                - {shape: ~, color: magenta, size: small}
                - {shape: ~, color: yellow, size: small}
      - repeat_before:
          n: 3
          list:
          - stack:
            - random_repeat_before:
                min: 4
                max: 5
                list:
                - {shape: ~, color: ~, size: small}
  
  negative_set:
  - side_by_side_reduce_bb:
    - permute:
      - stack:
        - random_repeat_before:
            min: 2
            max: 3
            list:
            - {shape: ~, color: ~, size: small}
      - repeat_before:
          n: 3
          list:
          - stack:
            - random_repeat_before:
                min: 4
                max: 5
                list:
                - {shape: ~, color: ~, size: small}
-
  name: simple scales
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side_reduce_bb:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  - side_by_side_reduce_bb:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
  - diag_ul_lr:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
  - diag_ll_ur:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  negative_set:
  - side_by_side_reduce_bb:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  - side_by_side_reduce_bb:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
  - diag_ul_lr:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  - diag_ll_ur:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  - diag_ul_lr:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
  - diag_ll_ur:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
  - diag_ul_lr:
    - {shape: not_triangle, color: ~, size: large}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: small}
  - diag_ll_ur:
    - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - {shape: not_triangle, color: ~, size: large}
    
-
  name: counting scales
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side_reduce_bb:
    - stack:
      - store: &n_objects                                       # BUG: BIAS. Store stores the entire grounded structure, store_before doesn't store the chosen number. In this way there will always be objects of the same type. Add store_length(alias, list), store_shape(alias, obj), store_color(alias, obj), store_size(alias, obj)
          alias: n_objects
          list:
          - random_repeat_before:
              min: 1
              max: 3
              list:
              - {shape: not_triangle, color: ~, size: small}
    - {shape: triangle, color: red, size: large}
    - stack:
      - recall:
          alias: n_objects
  - diag_ul_lr:
    - stack:
      - store: *n_objects
    - {shape: triangle, color: red, size: large}
    - stack:
      - permute: &more_than_n
        - recall:
            alias: n_objects
        - random_repeat_before:
            min: 1
            max: 2
            list:
            - {shape: not_triangle, color: ~, size: small}
  - diag_ll_ur:
    - argsort:
        idx: [2, 1, 0]
        list:
          - stack:
            - store: *n_objects
          - {shape: triangle, color: red, size: large}
          - stack:
            - permute: *more_than_n
  negative_set:
  - diag_ul_lr:
    - stack:
      - store: *n_objects
    - {shape: triangle, color: red, size: large}
    - stack:
      - recall:
          alias: n_objects
  - diag_ll_ur:
    - stack:
      - store: *n_objects
    - {shape: triangle, color: red, size: large}
    - stack:
      - recall:
          alias: n_objects
  - side_by_side_reduce_bb:
    - stack:
      - store: *n_objects
    - {shape: triangle, color: red, size: large}
    - stack:
      - permute: *more_than_n
  - side_by_side_reduce_bb:
    - argsort:
        idx: [2, 1, 0]
        list:
          - stack:
            - store: *n_objects
          - {shape: triangle, color: red, size: large}
          - stack:
            - permute: *more_than_n
  - diag_ll_ur:
    - stack:
      - store: *n_objects
    - {shape: triangle, color: red, size: large}
    - stack:
      - permute: *more_than_n
  - diag_ul_lr:
    - argsort:
        idx: [2, 1, 0]
        list:
          - stack:
            - store: *n_objects
          - {shape: triangle, color: red, size: large}
          - stack:
            - permute: *more_than_n
-
  name: odd color even shape # BUG BUG BUG BUG BUG usare recall_override!!!!
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - any_displacement: # Odd case
    - permute:
      - store_before:
          alias: color
          list:
          - pick_before:
              n: 1
              list:
              - *any_red
              - *any_grn
              - *any_blu
              - *any_cyn
              - *any_mag
              - *any_ylw
      - repeat_before:
          n: 2
          list:
          - random_repeat_before:
              min: 1
              max: 3
              list:
              - recall:
                  alias: color
  - any_displacement: # Even case
    - permute:
      - repeat_before:
          n: 2
          list:
          - store_before:
              alias: shape
              list:
              - pick_before:
                  n: 1
                  list:
                  - *any_tri
                  - *any_squ
                  - *any_cir
            
          - random_repeat_before:
              min: 0
              max: 2
              list:
              - recall:
                  alias: shape
        
  negative_set:
  - any_displacement: # Odd case
    - permute:
      - store_before:
          alias: shape
          list:
          - pick_before:
              n: 1
              list:
              - *any_tri
              - *any_squ
              - *any_cir
      - repeat_before:
          n: 2
          list:
          - random_repeat_before:
              min: 1
              max: 3
              list:
              - recall:
                  alias: shape
  - any_displacement: # Even case
    - permute:
      - repeat_before:
          n: 2
          list:
          - store_before:
              alias: color
              list:
              - pick_before:
                  n: 1
                  list:
                  - *any_red
                  - *any_grn
                  - *any_blu
                  - *any_cyn
                  - *any_mag
                  - *any_ylw
          - random_repeat_before:
              min: 0
              max: 2
              list:
              - recall:
                  alias: color
-
  name: red square for each quadrant
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - repeat_before:
        n: 4
        list:
        - grid:
          - permute:
            - {shape: square, color: red, size: ~}
            - repeat_before:
                n: 3
                list:
                - {shape: ~, color: ~, size: ~}
        
  negative_set:
  - grid:
    - repeat_before:
        n: 4
        list:
        - grid:
          - repeat_before:
              n: 4
              list:
              - pick:
                  n: 1
                  list:
                  - {shape: not_square, color: ~, size: ~}
                  - {shape: square, color: not_red, size: ~}
  - grid:
    - permute:
      - grid:
        - permute:
          - {shape: square, color: red, size: ~}
          - repeat_before:
              n: 3
              list:
              - {shape: ~, color: ~, size: ~}
      - repeat_before:
          n: 3
          list:
          - grid:
            - repeat_before:
                n: 4
                list:
                - pick:
                    n: 1
                    list:
                    - {shape: not_square, color: ~, size: ~}
                    - {shape: square, color: not_red, size: ~}
  - grid:
    - permute:
      - repeat_before:
          n: 2
          list:
          - grid:
            - permute:
              - {shape: square, color: red, size: ~}
              - repeat_before:
                  n: 3
                  list:
                  - {shape: ~, color: ~, size: ~}
      - repeat_before:
          n: 2
          list:
          - grid:
            - repeat_before:
                n: 4
                list:
                - pick:
                    n: 1
                    list:
                    - {shape: not_square, color: ~, size: ~}
                    - {shape: square, color: not_red, size: ~}
  - grid:
    - permute:
      - repeat_before:
          n: 3
          list:
          - grid:
            - permute:
              - {shape: square, color: red, size: ~}
              - repeat_before:
                  n: 3
                  list:
                  - {shape: ~, color: ~, size: ~}
      - repeat_before:
          n: 1
          list:
          - grid:
            - repeat_before:
                n: 4
                list:
                - pick:
                    n: 1
                    list:
                    - {shape: not_square, color: ~, size: ~}
                    - {shape: square, color: not_red, size: ~}
-
  name: same shape for each quadrant
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - grid:
      - permute:
        - store:
            alias: target
            list:
            - {shape: ~, color: ~, size: ~}
        - repeat_before:
            n: 3
            list:
            - {shape: ~, color: ~, size: ~}
    - repeat_before:
        n: 3
        list:
        - grid:
          - permute:
            - recall:
                alias: target
            - repeat_before:
                n: 3
                list:
                - {shape: ~, color: ~, size: ~}
        
  negative_set:        # BIAS: there is a small probability of generating a "positive" sample. It becomes increasingly more likely if hard negatives are built like the previous task, so it is better to keep a "generic" negative... 
  - grid:
    - repeat_before:
        n: 4
        list:
        - grid:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: ~}
-
  name: blue circles in diagonals
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - argsort:
        idx: [0, 8, 9, 1, 10, 2, 3, 11, 12, 4, 5, 13, 6, 14, 15, 7]
        list:
        - repeat_before:
            n: 8
            list:
            - {shape: circle, color: blue, size: ~}
        - repeat_before:
            n: 8
            list:
            - {shape: ~, color: ~, size: ~}
    
        
  negative_set:
  - grid:
    - permute:
      - repeat_before:
          n: 8
          list:
          - {shape: circle, color: blue, size: ~}
      - repeat_before:
          n: 8
          list:
          - {shape: ~, color: ~, size: ~}
-
  name: rotational symmetry 90 degrees
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - diag_ul_lr:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 5
              list:
              - {shape: ~, color: ~, size: small}
    - diag_ll_ur:
      - argsort:
          idx: [4, 3, 2, 1, 0]
          list:
          - recall:
              alias: objects
    - diag_ll_ur:
      - recall:
          alias: objects
    - diag_ul_lr:
      - argsort:
          idx: [4, 3, 2, 1, 0]
          list:
          - recall:
              alias: objects
        
  negative_set:
  - grid:
    - diag_ul_lr:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: small}
    - diag_ll_ur:
      - permute:
        - recall:
            alias: objects
    - diag_ll_ur:
      - permute:
        - recall:
            alias: objects
    - diag_ul_lr:
      - permute:
        - recall:
            alias: objects
            
-
  name: rotational symmetry 45 degrees
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - grid:
    - diag_ul_lr:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: small}
    - stack:
      - recall:
          alias: objects
    - diag_ll_ur:
      - argsort:
          idx: [3, 2, 1, 0]
          list:
          - recall:
              alias: objects
    - side_by_side:
      - recall:
          alias: objects
    - {shape: circle, color: ~, size: large}
    - side_by_side:
      - argsort:
          idx: [3, 2, 1, 0]
          list:
          - recall:
              alias: objects
    - diag_ll_ur:
      - recall:
          alias: objects
    - stack:
      - argsort:
          idx: [3, 2, 1, 0]
          list:
          - recall:
              alias: objects
    - diag_ul_lr:
      - argsort:
          idx: [3, 2, 1, 0]
          list:
          - recall:
              alias: objects
        
  negative_set:
  - grid:
    - diag_ul_lr:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: small}
    - stack:
      - permute:
        - recall:
            alias: objects
    - diag_ll_ur:
      - permute:
        - recall:
            alias: objects
    - side_by_side:
      - permute:
        - recall:
            alias: objects
    - {shape: circle, color: ~, size: large}
    - side_by_side:
      - permute:
        - recall:
            alias: objects
    - diag_ll_ur:
      - permute:
        - recall:
            alias: objects
    - stack:
      - permute:
        - recall:
            alias: objects
    - diag_ul_lr:
      - permute:
        - recall:
            alias: objects
-
  name: pointer shares attribute
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - diag_ul_lr:
    - stack:
      - repeat_before: &query
          n: 3
          list:
          - store_before:
              alias: query
              list:
              - pick_before:
                  n: 1
                  list:
                  - *any_tri
                  - *any_squ
                  - *any_cir
                  - *any_red
                  - *any_grn
                  - *any_blu
                  - *any_cyn
                  - *any_mag
                  - *any_ylw
    - grid:
      - argsort: &target
          idx: [0, 1, 2, 3]
          list:
          - recall:
              alias: query
          - repeat_before:
              n: 3
              list:
              - {shape: ~, color: ~, size: ~}
  - diag_ul_lr:
    - argsort: 
        idx: [1, 0]
        list:
          - stack:
            - repeat_before: *query
          - grid:
            - argsort:
                <<: *target
                idx: [1, 2, 3, 0]
  - diag_ll_ur:
    - argsort: 
        idx: [0, 1]
        list:
          - stack:
            - repeat_before: *query
          - grid:
            - argsort:
                <<: *target
                idx: [1, 2, 0, 3]
  - diag_ll_ur:
    - argsort: 
        idx: [1, 0]
        list:
          - stack:
            - repeat_before: *query
          - grid:
            - argsort:
                <<: *target
                idx: [1, 0, 2, 3]
        
  negative_set:
  - diag_ul_lr:
    - argsort:
        idx: [0, 1]
        list:
        - stack:
          - repeat_before: *query
        - grid:
          - argsort: &neg_target
              idx: [0, 1, 2, 3]
              list:
              - difference:
                - {shape: ~, color: ~, size: ~}
                - recall:
                    alias: query
              - repeat_before:
                  n: 3
                  list:
                  - {shape: ~, color: ~, size: ~}
  - diag_ul_lr:
    - argsort:
        idx: [1, 0]
        list:
        - stack:
          - repeat_before: *query
        - grid:
          - argsort:
              <<: *neg_target
              idx: [1, 2, 3, 0]
  - diag_ll_ur:
    - argsort:
        idx: [0, 1]
        list:
        - stack:
          - repeat_before: *query
        - grid:
          - argsort:
              <<: *neg_target
              idx: [1, 2, 0, 3]
  - diag_ll_ur:
    - argsort:
        idx: [1, 0]
        list:
        - stack:
          - repeat_before: *query
        - grid:
          - argsort:
              <<: *neg_target
              idx: [1, 0, 2, 3]
-
  name: clockwise vs counter-clockwise
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - diag_ul_lr: # To make clear separation of internal grids perceptively easier
    - grid:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: small}
    - grid:
      - argsort: &rotation
          idx: [2, 0, 3, 1]
          list:
          - recall:
              alias: objects
    - grid:
      - argsort: 
          <<: *rotation
          idx: [3, 2, 1, 0]  
    - grid:
      - argsort: 
          <<: *rotation
          idx: [1, 3, 0, 2]         
  negative_set:
  - diag_ul_lr:
    - grid:
      - store:
          alias: objects
          list:
          - repeat_before:
              n: 4
              list:
              - {shape: ~, color: ~, size: small}
    - grid:
      - argsort: 
          <<: *rotation
          idx: [1, 3, 0, 2]
    - grid:
      - argsort: 
          <<: *rotation
          idx: [3, 2, 1, 0]  
    - grid:
      - argsort: 
          <<: *rotation
          idx: [2, 0, 3, 1]
-
  name: majority difference
  gamma: 1.0
  beta: 1.0
  samples: 125
  train_split: 0.8
  val_split: 0.1
  noisy_color: False
  noisy_size: False
  positive_set:
  - side_by_side_reduce_bb:
    - stack:
      - permute:
        - {shape: ~, color: ~, size: ~}
        - repeat_before:
            n: 2
            list:
            - store_before:
                alias: color
                list:
                - pick_before:
                    n: 1
                    list:
                    - *any_red
                    - *any_grn
                    - *any_blu
                    - *any_cyn
                    - *any_mag
                    - *any_ylw
    - stack:
      - permute:
        - {shape: ~, color: ~, size: ~}
        - repeat_before:
            n: 2
            list:
            - store_before:
                alias: shape
                list:
                - pick_before:
                    n: 1
                    list:
                    - *any_tri
                    - *any_squ
                    - *any_cir
    - difference:
      - recall:
          alias: shape
      - recall:
          alias: color
  negative_set:
  - side_by_side_reduce_bb:
    - stack:
      - permute:
        - {shape: ~, color: ~, size: ~}
        - repeat_before:
            n: 2
            list:
            - store_before:
                alias: color
                list:
                - pick_before:
                    n: 1
                    list:
                    - *any_red
                    - *any_grn
                    - *any_blu
                    - *any_cyn
                    - *any_mag
                    - *any_ylw
    - stack:
      - permute:
        - {shape: ~, color: ~, size: ~}
        - repeat_before:
            n: 2
            list:
            - store_before:
                alias: shape
                list:
                - pick_before:
                    n: 1
                    list:
                    - *any_tri
                    - *any_squ
                    - *any_cir
    - {shape: ~, color: ~, size: ~}
